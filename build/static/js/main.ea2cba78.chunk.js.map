{"version":3,"sources":["actions.js","components/pages/countdownPage.js","hooks/useEmitter.js","components/pages/gamePage.js","components/pages/joinGamePage.js","components/pages/loginPage.js","components/pages/mainPage.js","components/loginButton.js","components/navBar.js","components/pages/newGamePage.js","components/pages/winPage.js","redux-store.js","index.js","App.js","hooks/useSocketSetup.js"],"names":["setGameState","state","type","payload","setWords","words","CountdownPage","count","useSelector","s","countdown","validMessages","useEmitter","socket","includes","data","emit","Error","GamePage","useState","word","setWord","submitted","setSubmitted","emitSendWord","onSubmitWord","useEffect","myId","id","roundWords","length","theirId","Object","keys","filter","e","className","autoFocus","value","onChange","target","onKeyPress","key","onClick","JoinGamePage","emitJoinGame","gameId","setGameId","placeholder","LoginPage","MainPage","dispatch","useDispatch","info","userInfo","givenName","LoginButton","appId","endpoint","loggedIn","token","axios","post","then","response","catch","clientId","buttonText","onLogoutSuccess","onSuccess","res","tokenObj","id_token","userData","profileObj","logInUser","err","console","error","onFailure","cookiePolicy","connect","store","props","src","imageUrl","alt","name","NewGamePage","emitStartGame","WinPage","resetEmitter","endEmitter","map","i","defaultStore","undefined","gameState","createStore","action","localToken","localStorage","getItem","setItem","disconnect","ReactDOM","render","initSocket","on","message","setCountdown","setSocket","useSocketSetup","pages","game","joinGame","main","newGame","winGame","io","query","msg","log","JSON","stringify","gamePage","document","getElementById"],"mappings":"oLAwBO,SAASA,EAAaC,GAC3B,MAAO,CAAEC,KAAM,iBAAkBC,QAASF,GAQrC,SAASG,EAASC,GACvB,MAAO,CAAEH,KAAM,YAAaC,QAASE,G,4BC/BxB,SAASC,IACtB,IAAMC,EAAQC,aAAY,SAAAC,GAAC,OAAIA,EAAEC,aAEjC,OACE,6BACE,4BAAKH,GACL,kD,WCPAI,EAAgB,CACpB,UACA,WACA,WACA,eACA,aAGa,SAASC,EAAWV,GACjC,IAAMW,EAASL,aAAY,SAACC,GAAD,OAAOA,EAAEI,UACpC,GAAIA,EAAQ,CACV,GAAIF,EAAcG,SAASZ,GACzB,OAAO,SAACa,GACNF,EAAOG,KAAKd,EAAMa,IAGtB,MAAM,IAAIE,MAAJ,uCAA0Cf,KCdrC,SAASgB,IAAY,IAAD,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAECF,oBAAS,GAFV,mBAE1BG,EAF0B,KAEfC,EAFe,KAI3BC,EAAeZ,EAAW,YAC1BP,EAAQG,aAAY,SAACC,GAAD,OAAOA,EAAEJ,SAC7BQ,EAASL,aAAY,SAACC,GAAD,OAAOA,EAAEI,UAOpC,SAASY,IACPD,EAAaJ,GACbG,GAAa,GAPfG,qBAAU,WACRH,GAAa,GACbF,EAAQ,MACP,CAAChB,IAOJ,IAAMsB,EAAOd,EAAOe,GACdC,EAAaxB,EAAQA,EAAMA,EAAMyB,OAAS,GAAK,GAC/CC,EAAU1B,EACZ2B,OAAOC,KAAKJ,GAAYK,QAAO,SAACC,GAAD,OAAOA,IAAMR,KAAM,GAClD,KAEJ,OACE,6BACGtB,GAASA,EAAMyB,OAAS,EACvB,6BACE,yBAAKM,UAAU,aACb,+CACA,yBAAKA,UAAU,aAAaP,EAAWF,KAEzC,yBAAKS,UAAU,cACb,gDACA,yBAAKA,UAAU,aAAaP,EAAWE,MAI3C,GAEDT,EACC,6BACE,wBAAIc,UAAW/B,EAAQ,WAAa,IAApC,cACA,uBAAG+B,UAAU,4BAA4BhB,GACzC,4DAGF,6BACE,wBAAIgB,UAAU,SAAd,iBACA,6BACE,2BACEC,WAAS,EACTnC,KAAK,OACLoC,MAAOlB,EACPmB,SAAU,SAACJ,GAAD,OAAOd,EAAQc,EAAEK,OAAOF,QAClCG,WAAY,SAACN,GACG,UAAVA,EAAEO,KACJjB,QAKR,4BAAQW,UAAU,0BAA0BO,QAASlB,GAArD,SC9DK,SAASmB,IACtB,IAAMC,EAAejC,EAAW,YADK,EAETO,mBAAS,IAFA,mBAE9B2B,EAF8B,KAEtBC,EAFsB,KAMrC,OAFArB,qBAAU,cAAU,IAGlB,6BACE,wDACA,6BACE,2BACEW,WAAS,EACTnC,KAAK,OACLqC,SAAU,SAACJ,GAAD,OAAOY,EAAUZ,EAAEK,OAAOF,QACpCG,WAAY,SAACN,GACG,UAAVA,EAAEO,KACJG,EAAaC,IAGjBE,YAAY,kBACZV,MAAOQ,KAIX,4BACEV,UAAU,0BACVO,QAAS,kBAAME,EAAaC,KAF9B,WC1BS,SAASG,IACtB,OACE,6BACE,8DAAmC,6BAAnC,sBCDS,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAO7C,aAAY,SAACC,GAAD,OAAOA,EAAE6C,YAElC,OACE,6BACE,mCAASD,EAAKE,UAAd,KACA,kDACA,4BACEnB,UAAU,0BACVO,QAAS,kBAAMQ,EAASnD,EAAa,cAFvC,oBAOA,kCAEA,4BACEoC,UAAU,0BACVO,QAAS,kBAAMQ,EAASnD,EAAa,eAFvC,gB,6BCfS,SAASwD,IACtB,IAAML,EAAWC,cACXK,EAAQjD,aAAY,SAACC,GAAD,OAAOA,EAAEgD,SAC7BC,EAAWlD,aAAY,SAACC,GAAD,OAAOA,EAAEiD,YAChCC,EAAWnD,aAAY,SAACC,GAAD,OAAOA,EAAEkD,YAChCC,EAAQpD,aAAY,SAACC,GAAD,OAAOA,EAAEmD,SAqBnC,OAnBAlC,qBAAU,WACJkC,GACFC,IACGC,KADH,UACWJ,EADX,iBACoC,CAAEE,UACnCG,MAAK,SAACC,GAAD,OAAcb,EPcnB,CAAEjD,KAAM,gBAAiBC,QOde6D,EAASjD,UACjDkD,OAAM,kBAAMd,EPRZ,CAAEjD,KAAM,UAAWC,SAAS,SOUhC,CAACyD,IAaF,yBAAKxB,UAAWuB,EAAW,eAAiB,uBAC1C,kBAAC,eAAD,CACEvB,UAAWuB,EAAW,GAAK,SAC3BO,SAAUT,EACVU,WAAW,SACXC,gBAAiB,kBAAMjB,EP5BtB,CAAEjD,KAAM,UAAWC,SAAS,OO8B/B,kBAAC,cAAD,CACE+D,SAAUT,EACVrB,UAAWuB,EAAW,SAAW,GACjCQ,WAAW,qBACXE,UAAW,SAACC,GAAD,OAtBIjB,EAsBiBiB,OArBpCT,IACGC,KADH,UACWJ,EADX,UAC6B,CACzBE,MAAOP,EAAKkB,SAASC,SACrBC,SAAUpB,EAAKqB,aAEhBX,MAAK,SAACO,GAAD,OAASnB,EPtBd,SAAmBG,EAAUM,GAClC,MAAO,CAAE1D,KAAM,SAAUC,QAAS,CAAEyD,QAAON,aOqBfqB,CAAUtB,EAAKqB,WAAYJ,EAAIvD,KAAK6C,WAC3DK,OAAM,SAACW,GAAD,OAASC,QAAQC,MAAMF,MAPlC,IAAqBvB,GAuBf0B,UAAW,SAACT,GAAD,OAASO,QAAQC,MAAR,uBAA8BR,KAClDU,aAAc,wBCvBPC,mBAAQ,SAACC,GAAD,OAAWA,IAAnBD,EAnBf,SAAgBE,GACd,OACE,4BAAQ/C,UAAU,kCAChB,wCAEC+C,EAAM7B,UACL,oCACE,yBACElB,UAAU,aACVgD,IAAKD,EAAM7B,SAAS+B,SACpBC,IAAKH,EAAM7B,SAASiC,QAI1B,kBAAC,EAAD,UCbS,SAASC,IACtB,IAAMC,EAAgB7E,EAAW,gBAC3BkC,EAAStC,aAAY,SAACC,GAAD,OAAOA,EAAEqC,UAIpC,OAFApB,qBAAU,kBAAM+D,MAAiB,IAG/B,6BACG3C,EACC,oCACG,IACD,6CACA,yBAAKV,UAAU,WAAWU,GAC1B,wEAGF,iDCjBO,SAAS4C,IACtB,IAAM7E,EAASL,aAAY,SAACC,GAAD,OAAOA,EAAEI,UAC9BR,EAAQG,aAAY,SAACC,GAAD,OAAOA,EAAEJ,SAC7BsF,EAAe/E,EAAW,aAC1BgF,EAAahF,EAAW,WAExBe,EAAOd,EAAOe,GACdG,EAAU1B,EACZ2B,OAAOC,KAAK5B,EAAM,IAAI6B,QAAO,SAACC,GAAD,OAAOA,IAAMR,KAAM,GAChD,KAEJ,OACE,6BACE,0CACA,iDACA,uBAAGS,UAAU,iBAAiB/B,GAASA,EAAMA,EAAMyB,OAAS,GAAGH,IAE/D,6BACE,6BACE,yBAAKS,UAAU,cACb,2CACC/B,GACCA,EAAMwF,KAAI,SAAC1D,EAAG2D,GAAJ,OACR,yBAAKpD,IAAKoD,EAAG1D,UAAU,aACpBD,EAAER,QAIX,yBAAKS,UAAU,eACb,4CACC/B,GACCA,EAAMwF,KAAI,SAAC1D,EAAG2D,GAAJ,OACR,yBAAKpD,IAAKoD,EAAG1D,UAAU,aACpBD,EAAEJ,UAMf,uBAAGK,UAAU,SAAb,UACA,6BACE,4BACEA,UAAU,0BACVO,QAAS,WACPgD,MAHJ,cAOU,KAEZ,6BACE,4BACEvD,UAAU,0BACVO,QAAS,WACPiD,MAHJ,kB,mBCnDFG,EAAe,CACnBtC,MACE,2EACF/C,eAAWsF,EACXtC,SAEM,yCAENZ,YAAQkD,EACRC,eAAWD,EACXrC,UAAU,EACV9C,YAAQmF,EACRpC,WAAOoC,EACP1C,cAAU0C,EACV3F,WAAO2F,GA0DF,IAAMd,EAAQgB,aAvDrB,WAAgD,IAA/BjG,EAA8B,uDAAtB8F,EAAcI,EAAQ,uCAC7C,OAAQA,EAAOjG,MACb,IAAK,cACH,IAAMkG,EAAaC,aAAaC,QArBrB,MAsBX,OAAO,eAAKrG,EAAZ,CAAmB2D,MAAOwC,IAC5B,IAAK,aACH,OAAO,eACFnG,EADL,CAEEgG,UAAW,OACXnD,YAAQkD,EACR3F,WAAO2F,EACPtF,eAAWsF,IAGf,IAAK,SAAL,MAC8BG,EAAOhG,QAA3ByD,EADV,EACUA,MAAON,EADjB,EACiBA,SAEf,OADA+C,aAAaE,QAlCF,KAkCoB3C,GACxB,eAAK3D,EAAZ,CAAmBqD,WAAUM,QAAOD,UAAU,IAChD,IAAK,UAGH,OAFA0C,aAAaE,QArCF,KAqCoB,IAC/BtG,EAAMY,QAAUZ,EAAMY,OAAO2F,YAAW,GACjC,eACFvG,EADL,CAEE0D,UAAU,EACVC,WAAOoC,EACP1C,cAAU0C,IAEd,IAAK,kBACH,OAAO,eAAK/F,EAAZ,CAAmBS,eAAWsF,IAChC,IAAK,aACH,OAAO,eACF/F,EADL,CAEEgG,UAAW,YACXvF,eAAWsF,EACX3F,WAAO2F,IAEX,IAAK,cACH,OAAO,eAAK/F,EAAZ,CAAmBI,WAAO2F,IAC5B,IAAK,gBACH,OAAO,eAAK/F,EAAZ,CAAmBS,UAAWyF,EAAOhG,UACvC,IAAK,cACH,OAAO,eAAKF,EAAZ,CAAmB6C,OAAQqD,EAAOhG,UACpC,IAAK,iBACH,OAAO,eAAKF,EAAZ,CAAmBgG,UAAWE,EAAOhG,UACvC,IAAK,aACH,OAAO,eAAKF,EAAZ,CAAmBY,OAAQsF,EAAOhG,UACpC,IAAK,gBACH,OAAO,eAAKF,EAAZ,CAAmBqD,SAAU6C,EAAOhG,QAASwD,UAAU,IACzD,IAAK,YACH,OAAO,eAAK1D,EAAZ,CAAmBI,MAAO8F,EAAOhG,UACnC,QACE,OAAOF,KAI6B8F,G,OCrE1CU,IAASC,OACP,kBAAC,IAAD,CAAUxB,MAAOA,GACf,mBCMW,WACb,IAAMxB,EAAWlD,aAAY,SAACC,GAAD,OAAOA,EAAEiD,YAChCuC,EAAYzF,aAAY,SAACC,GAAD,OAAOA,EAAEwF,aACjCtC,IAAanD,aAAY,SAACC,GAAD,OAAOA,EAAE6C,YAClCM,EAAQpD,aAAY,SAACC,GAAD,OAAOA,EAAEmD,SAC7BT,EAAWC,cACXuD,ECVO,WACb,IAAMxD,EAAWC,cACjB,OAAO,SAACvC,GACNA,EAAO+F,GAAG,WAAW,kBAAMzD,EdVtB,CAAEjD,KAAM,kBcWbW,EAAO+F,GAAG,QAAQ,SAACC,GAAD,OAAahC,QAAQxB,KAAR,gBAAsBwD,OACrDhG,EAAO+F,GAAG,kBAAkB,SAAC7F,GAAD,OAAUoC,EdMjC,CAAEjD,KAAM,cAAeC,QcN6BY,EAAK+B,YAC9DjC,EAAO+F,GAAG,aAAa,kBAAMzD,EdJxB,CAAEjD,KAAM,kBcKbW,EAAO+F,GAAG,aAAa,SAACvG,GAAD,OAAW8C,EAAS/C,EAASC,OACpDQ,EAAO+F,GAAG,kBAAkB,SAACrG,GAC3B4C,EdFC,SAAsB5C,GAC3B,MAAO,CAAEL,KAAM,gBAAiBC,QAASI,GcC5BuG,CAAavG,IAClBA,GAAS,GACX4C,EAASnD,EAAa,iBAG1Ba,EAAO+F,GAAG,aAAa,kBAAMzD,EAASnD,EAAa,YACnDa,EAAO+F,GAAG,WAAW,SAACvG,GACpB8C,EAASnD,EAAa,YACtBmD,EAAS/C,EAASC,OAEpB8C,EdHG,SAAmBtC,GACxB,MAAO,CAAEX,KAAM,aAAcC,QAASU,GcE3BkG,CAAUlG,KDTFmG,GAEbC,EAAQ,CACZvG,UAAW,kBAACJ,EAAD,MACX4G,KAAM,kBAAChG,EAAD,MACNiG,SAAU,kBAACvE,EAAD,MACVwE,KAAM,kBAAClE,EAAD,MACNmE,QAAS,kBAAC7B,EAAD,MACT8B,QAAS,kBAAC5B,EAAD,OAGXhE,qBAAU,WAER,GADAyB,EbhCK,CAAEjD,KAAM,gBaiCT0D,EAAO,CACT,IAAM/C,EAAS0G,IAAGtC,QAAQvB,EAAU,CAClC8D,MAAM,SAAD,OAAW5D,KAGlB/C,EACG+F,GAAG,WAAW,WACbD,EAAW9F,GACXsC,EbtCD,CAAEjD,KAAM,eauCPiD,EAASnD,EAAa,YAEvB4G,GAAG,gBAAgB,SAACa,GACnB5C,QAAQ6C,IAAR,wBAA6BC,KAAKC,UAAUH,EAAI1G,cAGrD,CAAC6C,IAEJ,IAAMiE,EAAWlE,EAAWsD,EAAMhB,GAAa,kBAAChD,EAAD,MAE/C,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKb,UAAS,eAAU6D,GAAa,UAAY4B,MD/CnD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ea2cba78.chunk.js","sourcesContent":["export function checkToken() {\n  return { type: 'CHECK_TOKEN' };\n}\nexport function clearGame() {\n  return { type: 'CLEAR_GAME' };\n}\nexport function logInUser(userInfo, token) {\n  return { type: 'LOG_IN', payload: { token, userInfo } };\n}\nexport function logOutUser() {\n  return { type: 'LOG_OUT', payload: false };\n}\nexport function resetGame() {\n  return { type: 'RESET_GAME' };\n}\nexport function resetWords() {\n  return { type: 'RESET_WORDS' };\n}\nexport function setCountdown(count) {\n  return { type: 'SET_COUNTDOWN', payload: count };\n}\nexport function setGameId(id) {\n  return { type: 'SET_GAME_ID', payload: id };\n}\nexport function setGameState(state) {\n  return { type: 'SET_GAME_STATE', payload: state };\n}\nexport function setSocket(socket) {\n  return { type: 'SET_SOCKET', payload: socket };\n}\nexport function setUserInfo(userInfo) {\n  return { type: 'SET_USER_INFO', payload: userInfo };\n}\nexport function setWords(words) {\n  return { type: 'SET_WORDS', payload: words };\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function CountdownPage() {\n  const count = useSelector(s => s.countdown);\n\n  return (\n    <div>\n      <h1>{count}</h1>\n      <h2>Game Begins In...</h2>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nconst validMessages = [\n  'endGame',\n  'joinGame',\n  'sendWord',\n  'startNewGame',\n  'resetGame',\n];\n\nexport default function useEmitter(type) {\n  const socket = useSelector((s) => s.socket);\n  if (socket) {\n    if (validMessages.includes(type)) {\n      return (data) => {\n        socket.emit(type, data);\n      };\n    }\n    throw new Error(`Invalid socket message type: ${type}`);\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useSelector } from 'react-redux';\n\nexport default function GamePage() {\n  const [word, setWord] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const emitSendWord = useEmitter('sendWord');\n  const words = useSelector((s) => s.words);\n  const socket = useSelector((s) => s.socket);\n\n  useEffect(() => {\n    setSubmitted(false);\n    setWord('');\n  }, [words]);\n\n  function onSubmitWord() {\n    emitSendWord(word);\n    setSubmitted(true);\n  }\n\n  const myId = socket.id;\n  const roundWords = words ? words[words.length - 1] : {};\n  const theirId = words\n    ? Object.keys(roundWords).filter((e) => e !== myId)[0]\n    : null;\n\n  return (\n    <div>\n      {words && words.length > 0 ? (\n        <div>\n          <div className=\"your word\">\n            <h2>Your Last Word:</h2>\n            <div className=\"word-sent\">{roundWords[myId]}</div>\n          </div>\n          <div className=\"their word\">\n            <h2>Their Last Word:</h2>\n            <div className=\"word-sent\">{roundWords[theirId]}</div>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n      {submitted ? (\n        <div>\n          <h1 className={words ? 'you-sent' : ''}>You sent: </h1>\n          <p className=\"word-sent word-submitted\">{word}</p>\n          <h2>Waiting for other player...</h2>\n        </div>\n      ) : (\n        <div>\n          <h1 className=\"clear\">Enter a word:</h1>\n          <div>\n            <input\n              autoFocus\n              type=\"text\"\n              value={word}\n              onChange={(e) => setWord(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  onSubmitWord();\n                }\n              }}\n            ></input>\n          </div>\n          <button className=\"pure-button button-main\" onClick={onSubmitWord}>\n            GO!\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useState } from 'react';\n\nexport default function JoinGamePage() {\n  const emitJoinGame = useEmitter('joinGame');\n  const [gameId, setGameId] = useState('');\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <h1>Enter code to join game:</h1>\n      <div>\n        <input\n          autoFocus\n          type=\"text\"\n          onChange={(e) => setGameId(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              emitJoinGame(gameId);\n            }\n          }}\n          placeholder=\"Enter code here\"\n          value={gameId}\n        ></input>\n      </div>\n\n      <button\n        className=\"pure-button button-main\"\n        onClick={() => emitJoinGame(gameId)}\n      >\n        Begin!\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <h1>Log in with your Google account<br/>to begin playing!</h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGameState } from '../../actions';\n\nexport default function MainPage() {\n  const dispatch = useDispatch();\n  const info = useSelector((s) => s.userInfo);\n\n  return (\n    <div>\n      <h1>Hi, {info.givenName}!</h1>\n      <h2>Would you like to:</h2>\n      <button\n        className=\"pure-button button-main\"\n        onClick={() => dispatch(setGameState('newGame'))}\n      >\n        Start a New Game\n      </button>\n\n      <h2>or</h2>\n\n      <button\n        className=\"pure-button button-main\"\n        onClick={() => dispatch(setGameState('joinGame'))}\n      >\n        Join a Game\n      </button>\n    </div>\n  );\n}\n","import { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { logInUser, logOutUser, setUserInfo } from '../actions';\n\nexport default function LoginButton() {\n  const dispatch = useDispatch();\n  const appId = useSelector((s) => s.appId);\n  const endpoint = useSelector((s) => s.endpoint);\n  const loggedIn = useSelector((s) => s.loggedIn);\n  const token = useSelector((s) => s.token);\n\n  useEffect(() => {\n    if (token) {\n      axios\n        .post(`${endpoint}/users/verify`, { token })\n        .then((response) => dispatch(setUserInfo(response.data)))\n        .catch(() => dispatch(logOutUser()));\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleLogin(info) {\n    axios\n      .post(`${endpoint}/users`, {\n        token: info.tokenObj.id_token,\n        userData: info.profileObj,\n      })\n      .then((res) => dispatch(logInUser(info.profileObj, res.data.token)))\n      .catch((err) => console.error(err));\n  }\n\n  return (\n    <div className={loggedIn ? 'button-login' : 'splash-button-login'}>\n      <GoogleLogout\n        className={loggedIn ? '' : 'hidden'}\n        clientId={appId}\n        buttonText=\"Logout\"\n        onLogoutSuccess={() => dispatch(logOutUser())}\n      ></GoogleLogout>\n      <GoogleLogin\n        clientId={appId}\n        className={loggedIn ? 'hidden' : ''}\n        buttonText=\"Log In With Google\"\n        onSuccess={(res) => handleLogin(res)}\n        onFailure={(res) => console.error(`Login Error: ${res}`)}\n        cookiePolicy={'single_host_origin'}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLoginButton from './loginButton';\n\nfunction NavBar(props) {\n  return (\n    <header className=\"pure-menu pure-menu-horizontal\">\n      <h1>Converge</h1>\n\n      {props.userInfo && (\n        <>\n          <img\n            className=\"user-image\"\n            src={props.userInfo.imageUrl}\n            alt={props.userInfo.name}\n          />\n        </>\n      )}\n      <GoogleLoginButton></GoogleLoginButton>\n    </header>\n  );\n}\n\nexport default connect((store) => store)(NavBar);\n","import React from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function NewGamePage() {\n  const emitStartGame = useEmitter('startNewGame');\n  const gameId = useSelector((s) => s.gameId);\n\n  useEffect(() => emitStartGame(), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      {gameId ? (\n        <>\n          {' '}\n          <h1>Your Game ID:</h1>\n          <div className=\"game-id\">{gameId}</div>\n          <p>Give this to a friend to join your game!</p>\n        </>\n      ) : (\n        <h1>Starting game...</h1>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport useEmitter from '../../hooks/useEmitter';\n\nexport default function WinPage() {\n  const socket = useSelector((s) => s.socket);\n  const words = useSelector((s) => s.words);\n  const resetEmitter = useEmitter('resetGame');\n  const endEmitter = useEmitter('endGame');\n\n  const myId = socket.id;\n  const theirId = words\n    ? Object.keys(words[0]).filter((e) => e !== myId)[0]\n    : null;\n\n  return (\n    <div>\n      <h2>HECK YEAH!</h2>\n      <h1>You Converged On:</h1>\n      <p className=\"converge-word\">{words && words[words.length - 1][myId]}</p>\n\n      <div>\n        <div>\n          <div className=\"your words\">\n            <h2>Your Words:</h2>\n            {words &&\n              words.map((e, i) => (\n                <div key={i} className=\"word-sent\">\n                  {e[myId]}\n                </div>\n              ))}\n          </div>\n          <div className=\"their words\">\n            <h2>Their Words:</h2>\n            {words &&\n              words.map((e, i) => (\n                <div key={i} className=\"word-sent\">\n                  {e[theirId]}\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n      <p className=\"clear\">Again?</p>\n      <div>\n        <button\n          className=\"pure-button button-main\"\n          onClick={() => {\n            resetEmitter();\n          }}\n        >\n          Play Again\n        </button>{' '}\n      </div>\n      <div>\n        <button\n          className=\"pure-button button-main\"\n          onClick={() => {\n            endEmitter();\n          }}\n        >\n          Back to Main\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { createStore } from 'redux';\n// NB: I am committing a sin by setting the token in localStorage in my reducers.\n\nconst tokenKey = '_t';\nconst defaultStore = {\n  appId:\n    '730966416306-dv0e9pb4m0k6khl2nrn5r9vskv2j8hmk.apps.googleusercontent.com',\n  countdown: undefined,\n  endpoint:\n    process.env.NODE_ENV === 'production'\n      ? 'https://converge-game-be.herokuapp.com'\n      : 'http://localhost:8000',\n  gameId: undefined,\n  gameState: undefined,\n  loggedIn: false,\n  socket: undefined,\n  token: undefined,\n  userInfo: undefined,\n  words: undefined,\n};\n\nfunction reducer(state = defaultStore, action) {\n  switch (action.type) {\n    case 'CHECK_TOKEN':\n      const localToken = localStorage.getItem(tokenKey);\n      return { ...state, token: localToken };\n    case 'CLEAR_GAME':\n      return {\n        ...state,\n        gameState: 'main',\n        gameId: undefined,\n        words: undefined,\n        countdown: undefined,\n      };\n\n    case 'LOG_IN':\n      const { token, userInfo } = action.payload;\n      localStorage.setItem(tokenKey, token);\n      return { ...state, userInfo, token, loggedIn: true };\n    case 'LOG_OUT':\n      localStorage.setItem(tokenKey, '');\n      state.socket && state.socket.disconnect(true);\n      return {\n        ...state,\n        loggedIn: false,\n        token: undefined,\n        userInfo: undefined,\n      };\n    case 'RESET_COUNTDOWN':\n      return { ...state, countdown: undefined };\n    case 'RESET_GAME':\n      return {\n        ...state,\n        gameState: 'countdown',\n        countdown: undefined,\n        words: undefined,\n      };\n    case 'RESET_WORDS':\n      return { ...state, words: undefined };\n    case 'SET_COUNTDOWN':\n      return { ...state, countdown: action.payload };\n    case 'SET_GAME_ID':\n      return { ...state, gameId: action.payload };\n    case 'SET_GAME_STATE':\n      return { ...state, gameState: action.payload };\n    case 'SET_SOCKET':\n      return { ...state, socket: action.payload };\n    case 'SET_USER_INFO':\n      return { ...state, userInfo: action.payload, loggedIn: true };\n    case 'SET_WORDS':\n      return { ...state, words: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer, defaultStore);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux-store';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React, { useEffect } from 'react';\nimport { checkToken, clearGame, setGameState } from './actions';\nimport io from 'socket.io-client';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useSocketSetup from './hooks/useSocketSetup';\n\nimport CountdownPage from './components/pages/countdownPage';\nimport GamePage from './components/pages/gamePage';\nimport JoinGamePage from './components/pages/joinGamePage';\nimport LoginPage from './components/pages/loginPage';\nimport MainPage from './components/pages/mainPage';\nimport NavBar from './components/navBar';\nimport NewGamePage from './components/pages/newGamePage';\nimport WinPage from './components/pages/winPage';\n\nexport default function App() {\n  const endpoint = useSelector((s) => s.endpoint);\n  const gameState = useSelector((s) => s.gameState);\n  const loggedIn = !!useSelector((s) => s.userInfo);\n  const token = useSelector((s) => s.token);\n  const dispatch = useDispatch();\n  const initSocket = useSocketSetup();\n\n  const pages = {\n    countdown: <CountdownPage></CountdownPage>,\n    game: <GamePage></GamePage>,\n    joinGame: <JoinGamePage></JoinGamePage>,\n    main: <MainPage></MainPage>,\n    newGame: <NewGamePage></NewGamePage>,\n    winGame: <WinPage></WinPage>,\n  };\n\n  useEffect(() => {\n    dispatch(checkToken());\n    if (token) {\n      const socket = io.connect(endpoint, {\n        query: `token=${token}`, // why no Bearer work?  ¯\\_(ツ)_/¯\n      });\n\n      socket\n        .on('connect', () => {\n          initSocket(socket);\n          dispatch(clearGame());\n          dispatch(setGameState('main'));\n        })\n        .on('unauthorized', (msg) => {\n          console.log(`unauthorized: ${JSON.stringify(msg.data)}`);\n        });\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const gamePage = loggedIn ? pages[gameState] : <LoginPage></LoginPage>;\n\n  return (\n    <>\n      <NavBar></NavBar>\n      <div className={`page-${gameState || 'login'}`}>{gamePage}</div>\n    </>\n  );\n}\n","import { setSocket } from '../actions';\nimport { useDispatch } from 'react-redux';\nimport {\n  clearGame,\n  resetGame,\n  setCountdown,\n  setGameId,\n  setGameState,\n  setWords,\n} from '../actions';\n\nexport default function useSocketSetup() {\n  const dispatch = useDispatch();\n  return (socket) => {\n    socket.on('endGame', () => dispatch(clearGame()));\n    socket.on('info', (message) => console.info(`INFO: ${message}`));\n    socket.on('newGameCreated', (data) => dispatch(setGameId(data.gameId)));\n    socket.on('resetGame', () => dispatch(resetGame()));\n    socket.on('roundOver', (words) => dispatch(setWords(words)));\n    socket.on('startCountdown', (count) => {\n      dispatch(setCountdown(count));\n      if (count >= 0) {\n        dispatch(setGameState('countdown'));\n      }\n    });\n    socket.on('startGame', () => dispatch(setGameState('game')));\n    socket.on('winGame', (words) => {\n      dispatch(setGameState('winGame'));\n      dispatch(setWords(words));\n    });\n    dispatch(setSocket(socket));\n  };\n}\n"],"sourceRoot":""}