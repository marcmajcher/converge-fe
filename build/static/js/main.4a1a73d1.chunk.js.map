{"version":3,"sources":["actions.js","components/pages/countdownPage.js","hooks/useEmitter.js","components/pages/gamePage.js","components/pages/joinGamePage.js","components/pages/loginPage.js","components/userInfo.js","components/pages/userPage.js","components/pages/mainPage.js","components/loginButton.js","components/navBar.js","components/pages/newGamePage.js","components/pages/winPage.js","redux-store.js","index.js","App.js","hooks/useSocketSetup.js"],"names":["setGameState","state","type","payload","setWords","words","CountdownPage","count","useSelector","s","countdown","validMessages","useEmitter","socket","includes","data","emit","Error","GamePage","useState","word","setWord","submitted","setSubmitted","emitSendWord","useEffect","myId","id","roundWords","length","theirId","Object","keys","filter","e","value","onChange","target","onClick","JoinGamePage","emitJoinGame","gameId","setGameId","LoginPage","UserInfo","props","info","userInfo","givenName","UserPage","MainPage","dispatch","useDispatch","LoginButton","appId","endpoint","loggedIn","token","axios","post","then","response","catch","className","clientId","buttonText","onLogoutSuccess","onSuccess","res","tokenObj","id_token","userData","profileObj","logInUser","err","console","error","onFailure","cookiePolicy","connect","store","href","src","imageUrl","alt","name","NewGamePage","emitStartGame","WinPage","resetEmitter","endEmitter","map","i","key","defaultStore","undefined","gameState","createStore","action","localToken","localStorage","getItem","setItem","disconnect","ReactDOM","render","initSocket","on","message","setCountdown","setSocket","useSocketSetup","pages","game","joinGame","main","newGame","winGame","io","query","msg","log","JSON","stringify","gamePage","document","getElementById"],"mappings":"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","file":"static/js/main.4a1a73d1.chunk.js","sourcesContent":["export function checkToken() {\n  return { type: 'CHECK_TOKEN' };\n}\nexport function clearGame() {\n  return { type: 'CLEAR_GAME' };\n}\nexport function logInUser(userInfo, token) {\n  return { type: 'LOG_IN', payload: { token, userInfo } };\n}\nexport function logOutUser() {\n  return { type: 'LOG_OUT', payload: false };\n}\nexport function resetGame() {\n  return { type: 'RESET_GAME' };\n}\nexport function resetWords() {\n  return { type: 'RESET_WORDS' };\n}\nexport function setCountdown(count) {\n  return { type: 'SET_COUNTDOWN', payload: count };\n}\nexport function setGameId(id) {\n  return { type: 'SET_GAME_ID', payload: id };\n}\nexport function setGameState(state) {\n  return { type: 'SET_GAME_STATE', payload: state };\n}\nexport function setSocket(socket) {\n  return { type: 'SET_SOCKET', payload: socket };\n}\nexport function setUserInfo(userInfo) {\n  return { type: 'SET_USER_INFO', payload: userInfo };\n}\nexport function setWords(words) {\n  return { type: 'SET_WORDS', payload: words };\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function CountdownPage() {\n  const count = useSelector(s => s.countdown);\n\n  return (\n    <div>\n      <h1>COUNTDOWN</h1>\n      <h2>Game starts in: {count}</h2>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nconst validMessages = [\n  'endGame',\n  'joinGame',\n  'sendWord',\n  'startNewGame',\n  'resetGame',\n];\n\nexport default function useEmitter(type) {\n  const socket = useSelector((s) => s.socket);\n  if (socket) {\n    if (validMessages.includes(type)) {\n      return (data) => {\n        socket.emit(type, data);\n      };\n    }\n    throw new Error(`Invalid socket message type: ${type}`);\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useSelector } from 'react-redux';\n\nexport default function GamePage() {\n  const [word, setWord] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const emitSendWord = useEmitter('sendWord');\n  const words = useSelector(s => s.words);\n  const socket = useSelector(s => s.socket);\n\n  useEffect(() => {\n    setSubmitted(false);\n    setWord('');\n  }, [words]);\n\n  function onSubmitWord() {\n    emitSendWord(word);\n    setSubmitted(true);\n  }\n\n  const myId = socket.id;\n  const roundWords = words ? words[words.length - 1] : {};\n  const theirId = words\n    ? Object.keys(roundWords).filter(e => e !== myId)[0]\n    : null;\n\n  return (\n    <div>\n      <h1>GAME ON</h1>\n      {words && words.length > 0 ? (\n        <div>\n          <div>Your Last Word: {roundWords[myId]}</div>\n          <div>\n            Their Last Word:\n            {roundWords[theirId]}\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n      {submitted ? (\n        <div>You sent: {word} -- waiting...</div>\n      ) : (\n        <div>\n          Enter a word:{' '}\n          <input value={word} onChange={e => setWord(e.target.value)}></input>\n          <button onClick={onSubmitWord}>GO!</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useState } from 'react';\n\nexport default function JoinGamePage() {\n  const emitJoinGame = useEmitter('joinGame');\n  const [gameId, setGameId] = useState('');\n\n  return (\n    <div>\n      <h1>JOIN GAME</h1>\n      Game ID:{' '}\n      <input value={gameId} onChange={e => setGameId(e.target.value)}></input>\n      <button onClick={() => emitJoinGame(gameId)}>Begin!</button>\n    </div>\n  ) \n}\n","import React from 'react';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <h1>LOG IN -----> over there</h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function UserInfo(props) {\n  const info = props.userInfo;\n\n  return (\n    <div>\n      <h1>Hi, {info.givenName}!</h1>\n      {/* <img src={info.imageUrl} alt={info.name} /> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport UserInfo from '../userInfo';\nimport { useSelector } from 'react-redux';\n\nexport default function UserPage() {\n  const userInfo = useSelector(s => s.userInfo);\n  return <UserInfo userInfo={userInfo}></UserInfo>;\n}\n","import React from 'react';\nimport UserPage from './userPage';\nimport { useDispatch } from 'react-redux';\nimport { setGameState } from '../../actions';\n\nexport default function MainPage() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <UserPage></UserPage>\n      <button onClick={() => dispatch(setGameState('newGame'))}>\n        Start a New Game\n      </button>\n      <button onClick={() => dispatch(setGameState('joinGame'))}>\n        Join a Game\n      </button>\n    </div>\n  );\n}\n","import { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { logInUser, logOutUser, setUserInfo } from '../actions';\n\nexport default function LoginButton() {\n  const dispatch = useDispatch();\n  const appId = useSelector(s => s.appId);\n  const endpoint = useSelector(s => s.endpoint);\n  const loggedIn = useSelector(s => s.loggedIn);\n  const token = useSelector(s => s.token);\n\n  useEffect(() => {\n    if (token) {\n      axios\n        .post(`${endpoint}/users/verify`, { token })\n        .then(response => dispatch(setUserInfo(response.data)))\n        .catch(() => dispatch(logOutUser()));\n    } \n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleLogin(info) {\n    axios\n      .post(`${endpoint}/users`, {\n        token: info.tokenObj.id_token,\n        userData: info.profileObj,\n      })\n      .then(res => dispatch(logInUser(info.profileObj, res.data.token)))\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <>\n      <GoogleLogout\n        className={loggedIn ? '' : 'hidden'}\n        clientId={appId}\n        buttonText=\"Logout\"\n        onLogoutSuccess={() => dispatch(logOutUser())}\n      ></GoogleLogout>\n      <GoogleLogin\n        clientId={appId}\n        className={loggedIn ? 'hidden' : ''}\n        buttonText=\"Log In With Google\"\n        onSuccess={res => handleLogin(res)}\n        onFailure={res => console.error(`Login Error: ${res}`)}\n        cookiePolicy={'single_host_origin'}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLoginButton from './loginButton';\n\nfunction NavBar(props) {\n  return (\n    <header className=\"header\">\n      <div className=\"home-menu pure-menu pure-menu-horizontal pure-menu-fixed\">\n        <a className=\"pure-menu-heading\" href=\"/\">\n          Converge\n        </a>\n        <ul className=\"pure-menu-list\">\n          {props.userInfo && (\n            <li className=\"pure-menu-item\">\n              <img\n                className=\"user-image\"\n                src={props.userInfo.imageUrl}\n                alt={props.userInfo.name}\n              />\n            </li>\n          )}\n          <li className=\"pure-menu-item\">\n            <GoogleLoginButton></GoogleLoginButton>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nexport default connect(store => store)(NavBar);\n","import React from 'react';\nimport useEmitter from '../../hooks/useEmitter';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function NewGamePage() {\n  const emitStartGame = useEmitter('startNewGame');\n  const gameId = useSelector(s => s.gameId);\n\n  useEffect(() => emitStartGame(), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return gameId ? (\n    <div>\n      Your game id is:<h1>{gameId}</h1>\n    </div>\n  ) : (\n    <h1>Starting...</h1>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport useEmitter from '../../hooks/useEmitter';\n\nexport default function WinPage() {\n  const socket = useSelector((s) => s.socket);\n  const words = useSelector((s) => s.words);\n  const resetEmitter = useEmitter('resetGame');\n  const endEmitter = useEmitter('endGame');\n\n  const myId = socket.id;\n  const theirId = words\n    ? Object.keys(words[0]).filter((e) => e !== myId)[0]\n    : null;\n\n  return (\n    <div>\n      <h1>YOU WIN!</h1>\n      <div>\n        Your Words / Their Words:\n        <ul>\n          {words &&\n            words.map((e, i) => (\n              <li key={i}>\n                {e[myId]} / {e[theirId]}\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div>\n        <button onClick={() => resetEmitter()}>Play Again</button>{' '}\n        <button\n          onClick={() => {\n            endEmitter();\n          }}\n        >\n          Back to Main\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { createStore } from 'redux';\n// NB: I am committing a sin by setting the token in localStorage in my reducers.\n\nconst tokenKey = '_t';\nconst defaultStore = {\n  appId:\n    '730966416306-dv0e9pb4m0k6khl2nrn5r9vskv2j8hmk.apps.googleusercontent.com',\n  countdown: undefined,\n  endpoint:\n    process.env.NODE_ENV === 'production'\n      ? 'https://converge-game-be.herokuapp.com'\n      : 'http://localhost:8000',\n  gameId: undefined,\n  gameState: undefined,\n  loggedIn: false,\n  socket: undefined,\n  token: undefined,\n  userInfo: undefined,\n  words: undefined,\n};\n\nfunction reducer(state = defaultStore, action) {\n  switch (action.type) {\n    case 'CHECK_TOKEN':\n      const localToken = localStorage.getItem(tokenKey);\n      return { ...state, token: localToken };\n    case 'CLEAR_GAME':\n      return {\n        ...state,\n        gameState: 'main',\n        gameId: undefined,\n        words: undefined,\n        countdown: undefined,\n      };\n\n    case 'LOG_IN':\n      const { token, userInfo } = action.payload;\n      localStorage.setItem(tokenKey, token);\n      return { ...state, userInfo, token, loggedIn: true };\n    case 'LOG_OUT':\n      localStorage.setItem(tokenKey, '');\n      state.socket && state.socket.disconnect(true);\n      return {\n        ...state,\n        loggedIn: false,\n        token: undefined,\n        userInfo: undefined,\n      };\n    case 'RESET_COUNTDOWN':\n      return { ...state, countdown: undefined };\n    case 'RESET_GAME':\n      return {\n        ...state,\n        countdown: undefined,\n        words: undefined,\n      };\n    case 'RESET_WORDS':\n      return { ...state, words: undefined };\n    case 'SET_COUNTDOWN':\n      return { ...state, countdown: action.payload };\n    case 'SET_GAME_ID':\n      return { ...state, gameId: action.payload };\n    case 'SET_GAME_STATE':\n      return { ...state, gameState: action.payload };\n    case 'SET_SOCKET':\n      return { ...state, socket: action.payload };\n    case 'SET_USER_INFO':\n      return { ...state, userInfo: action.payload, loggedIn: true };\n    case 'SET_WORDS':\n      return { ...state, words: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer, defaultStore);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux-store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App className=\"app\" />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React, { useEffect } from 'react';\nimport { checkToken, clearGame, setGameState } from './actions';\nimport io from 'socket.io-client';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useSocketSetup from './hooks/useSocketSetup';\nimport './App.scss';\n\nimport CountdownPage from './components/pages/countdownPage';\nimport GamePage from './components/pages/gamePage';\nimport JoinGamePage from './components/pages/joinGamePage';\nimport LoginPage from './components/pages/loginPage';\nimport MainPage from './components/pages/mainPage';\nimport NavBar from './components/navBar';\nimport NewGamePage from './components/pages/newGamePage';\nimport WinPage from './components/pages/winPage';\n\nexport default function App() {\n  const endpoint = useSelector((s) => s.endpoint);\n  const gameState = useSelector((s) => s.gameState);\n  const loggedIn = !!useSelector((s) => s.userInfo);\n  const token = useSelector((s) => s.token);\n  const dispatch = useDispatch();\n  const initSocket = useSocketSetup();\n\n  const pages = {\n    countdown: <CountdownPage></CountdownPage>,\n    game: <GamePage></GamePage>,\n    joinGame: <JoinGamePage></JoinGamePage>,\n    main: <MainPage></MainPage>,\n    newGame: <NewGamePage></NewGamePage>,\n    winGame: <WinPage></WinPage>,\n  };\n\n  useEffect(() => {\n    dispatch(checkToken());\n    if (token) {\n      const socket = io.connect(endpoint, {\n        query: `token=${token}`, // why no Bearer work?  ¯\\_(ツ)_/¯\n      });\n\n      socket\n        .on('connect', () => {\n          initSocket(socket);\n          dispatch(clearGame());\n          dispatch(setGameState('main'));\n        })\n        .on('unauthorized', (msg) => {\n          console.log(`unauthorized: ${JSON.stringify(msg.data)}`);\n        });\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const gamePage = loggedIn ? pages[gameState] : <LoginPage></LoginPage>;\n  console.log('GAME STATE', gameState);\n  return (\n    <>\n      <NavBar></NavBar>\n      <div className=\"content\">{gamePage}</div>\n    </>\n  );\n}\n","import { setSocket } from '../actions';\nimport { useDispatch } from 'react-redux';\nimport {\n  clearGame,\n  resetGame,\n  setCountdown,\n  setGameId,\n  setGameState,\n  setWords,\n} from '../actions';\n\nexport default function useSocketSetup() {\n  const dispatch = useDispatch();\n  return (socket) => {\n    socket.on('endGame', () => dispatch(clearGame()));\n    socket.on('info', (message) => console.info(`INFO: ${message}`));\n    socket.on('newGameCreated', (data) => dispatch(setGameId(data.gameId)));\n    socket.on('resetGame', () => dispatch(resetGame()));\n    socket.on('roundOver', (words) => dispatch(setWords(words)));\n    socket.on('startCountdown', (count) => {\n      dispatch(setCountdown(count));\n      if (count >= 0) {\n        dispatch(setGameState('countdown'));\n      }\n    });\n    socket.on('startGame', () => dispatch(setGameState('game')));\n    socket.on('winGame', (words) => {\n      dispatch(setGameState('winGame'));\n      dispatch(setWords(words));\n    });\n    dispatch(setSocket(socket));\n  };\n}\n"],"sourceRoot":""}